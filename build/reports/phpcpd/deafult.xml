Found 10 exact clones with 115 duplicated lines in 10 files:

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/AttendeeController.php:132-143
    /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/CreationController.php:194-205

    private function createDeleteForm($id)
    {
        return $this->createFormBuilder(array('id' => $id))
            ->add('id', 'hidden')
            ->getForm()
        ;
    }
    
    public function isLogged()
    {
        return $this->get('security.context')->isGranted('IS_AUTHENTICATED_FULLY');

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/AdminController.php:3-9
    /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/MeetingController.php:3-9

namespace Meedule\MeetingBundle\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/AdminController.php:38-45
    /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/MeetingController.php:49-56

        $entity = $em->getRepository('MeeduleMeetingBundle:Meeting')->findOneBySlugprivate($slug);

        if (!$entity) {
            throw $this->createNotFoundException('Unable to find Meeting entity.');
        }
        
        if($entity->isClosed())

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/AttendeeController.php:132-143
    /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/MeetingController.php:145-156

    private function createDeleteForm($id)
    {
        return $this->createFormBuilder(array('id' => $id))
            ->add('id', 'hidden')
            ->getForm()
        ;
    }
    
    public function isLogged()
    {
        return $this->get('security.context')->isGranted('IS_AUTHENTICATED_FULLY');

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/AttendeeController.php:20-35
    /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/ReferenceController.php:21-36

class AttendeeController extends Controller
{
    /**
     * @Route("/create", name="meeting_attendee_create")
     * @Method("post")
     */
    public function createAction($slug)
    {
        $em = $this->getDoctrine()->getEntityManager();
        $meeting = $em->getRepository('MeeduleMeetingBundle:Meeting')->findOneBySlugpublic($slug);
        if (!$meeting) {
            throw $this->createNotFoundException('Unable to find Meeting entity.');
        }
        $this->create($meeting);
        return $this->redirect($this->generateUrl('meeting_show', array('slug' => $meeting->getSlugpublic())));

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/AttendeeController.php:66-87
    /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/ReferenceController.php:62-83

            $entity->setMeeting($meeting);
            $em->persist($entity);
            $em->flush();
        }
    }
    
    /**
     * @return view
     * @throws no exists
     * 
     * @Route("/{id}/delete", name="meeting_attendee_delete")
     * @Method({"POST"})
     */
    public function deleteAction($slug, $id)
    {
        $em = $this->getDoctrine()->getEntityManager();
        $meeting = $em->getRepository('MeeduleMeetingBundle:Meeting')->findOneBySlugpublic($slug);
        if (!$meeting) {
            throw $this->createNotFoundException('Unable to find Meeting entity.');
        }
        $this->delete($meeting, $id);

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/AttendeeController.php:79-87
    /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/TopicController.php:142-150

    public function deleteAction($slug, $id)
    {
        $em = $this->getDoctrine()->getEntityManager();
        $meeting = $em->getRepository('MeeduleMeetingBundle:Meeting')->findOneBySlugpublic($slug);
        if (!$meeting) {
            throw $this->createNotFoundException('Unable to find Meeting entity.');
        }
        $this->delete($meeting, $id);

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/AttendeeController.php:132-143
    /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Controller/TopicController.php:224-235

    private function createDeleteForm($id)
    {
        return $this->createFormBuilder(array('id' => $id))
            ->add('id', 'hidden')
            ->getForm()
        ;
    }
    
    public function isLogged()
    {
        return $this->get('security.context')->isGranted('IS_AUTHENTICATED_FULLY');

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Entity/Attendee.php:148-161
    /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/Entity/Topic.php:206-219

    public function setUser(\Meedule\UserBundle\Entity\User $user)
    {
        $this->user = $user;
    }

    /**
     * Get user
     *
     * @return Meedule\UserBundle\Entity\User 
     */
    public function getUser()
    {
        return $this->user;

  - /Users/fabio/Sites/Meedule/./src/Meedule/MeetingBundle/DependencyInjection/MeeduleMeetingExtension.php:15-27
    /Users/fabio/Sites/Meedule/./src/Meedule/UserBundle/DependencyInjection/MeeduleUserExtension.php:15-27

class MeeduleMeetingExtension extends Extension
{
    /**
     * {@inheritDoc}
     */
    public function load(array $configs, ContainerBuilder $container)
    {
        $configuration = new Configuration();
        $config = $this->processConfiguration($configuration, $configs);

        $loader = new Loader\XmlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.xml');

3.38% duplicated lines out of 3407 total lines of code.

Time: 30 seconds, Memory: 18.75Mb
