services:
    meedule_user.user_manager:
        class: Meedule\UserBundle\Model\UserManager
        public: false
        parent: fos_user.user_manager.default
    google.user:
        class: Meedule\UserBundle\Security\User\Provider\GoogleProvider
        arguments:
            google: "@fos_google.api"
            userManager: "@fos_user.user_manager"
            validator: "@validator"
            em: "@doctrine.orm.entity_manager"
            container: "@service_container"

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512
        
    factories:
        - "%kernel.root_dir%/../vendor/bundles/FOS/GoogleBundle/Resources/config/security_factories.xml"

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_user_bundle:
            id: fos_user.user_manager
        google:
            id: google.user

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
       
        public:
            pattern:    ^/
            remember_me:
                key:      asdfasdfasdfasdf
                lifetime: 604800
                path:     /
                domain:   ~
            form_login:
                csrf_provider: form.csrf_provider
                login_path:  /login
                check_path:  /login_check
                provider: fos_user_bundle
            http_basic:
                realm: "Secured Demo Area"
                provider: fos_user_bundle
            fos_google:
                provider: google
                login_path: /login
            logout: true
            anonymous: true

    access_control:
        - { path: ^/fabio/meetings, roles: ROLE_ADMIN }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/my, roles: ROLE_USER }

